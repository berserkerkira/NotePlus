### Generated by Winemaker 0.8.3
###
### Invocation command line was
### /usr/bin/winemaker --nomsvcrt --dll --lower-all -Ilexlib -I../src -Iinclude -icomdlg32 -ishell32 -ishlwapi -iuser32 -igdi32 -iadvapi32 -lboost-regex-dev .


SRCDIR                = .
DLLS                  = deps.dll
LIBS                  =
EXES                  =



### Common settings

CEXTRA                =
CXXEXTRA              =
RCEXTRA               =
DEFINES               = -DPLAT_GTK
INCLUDE_PATH          = -Ilexlib \
			-I../src \
			-I../include \
			-I/usr/include/glib-2.0 \
			-pthread -I/usr/include/gtk-3.0 -I/usr/include/pango-1.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/freetype2 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/libpng12  \
		    -pthread -I/usr/include/gtk-2.0 -I/usr/lib/x86_64-linux-gnu/gtk-2.0/include -I/usr/include/gio-unix-2.0/ -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 \
			-I.
DLL_PATH              =
DLL_IMPORTS           = comdlg32 \
			shell32 \
			shlwapi \
			user32 \
			gdi32 \
			advapi32
LIBRARY_PATH          =
LIBRARIES             = -lboost_regex -lboost_regex-mt -lglib-2.0


### deps.dll sources and settings

deps_dll_MODULE       = deps.dll
deps_dll_C_SRCS       = scintilla-marshal.c
deps_dll_CXX_SRCS     = PlatGTK.cxx \
			ScintillaGTK.cxx
deps_dll_RC_SRCS      =
deps_dll_LDFLAGS      = -shared \
			$(deps_dll_MODULE:.dll=.spec)
deps_dll_ARFLAGS      =
deps_dll_DLL_PATH     =
deps_dll_DLLS         = odbc32 \
			ole32 \
			oleaut32 \
			winspool \
			odbccp32
deps_dll_LIBRARY_PATH =
deps_dll_LIBRARIES    = uuid

deps_dll_OBJS         = $(deps_dll_C_SRCS:.c=.o) \
			$(deps_dll_CXX_SRCS:.cxx=.o) \
			$(deps_dll_RC_SRCS:.rc=.res)



### Global source lists

C_SRCS                = $(deps_dll_C_SRCS)
CXX_SRCS              = $(deps_dll_CXX_SRCS)
RC_SRCS               = $(deps_dll_RC_SRCS)


### Tools

CC = winegcc
CXX = wineg++
RC = wrc
AR = ar


### Generic targets

all: $(DLLS:%=%.so) $(LIBS) $(EXES)

### Build rules

.PHONY: all clean dummy

$(SUBDIRS): dummy
	@cd $@ && $(MAKE)

# Implicit rules

.SUFFIXES: .cpp .cxx .rc .res
DEFINCL = $(INCLUDE_PATH) $(DEFINES) $(OPTIONS)

.c.o:
	$(CC) -c $(CFLAGS) $(CEXTRA) $(DEFINCL) -o $@ $<

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(CXXEXTRA) $(DEFINCL) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(CXXEXTRA) $(DEFINCL) -o $@ $<

.rc.res:
	$(RC) $(RCFLAGS) $(RCEXTRA) $(DEFINCL) -fo$@ $<

# Rules for cleaning

CLEAN_FILES     = y.tab.c y.tab.h lex.yy.c core *.orig *.rej \
                  \\\#*\\\# *~ *% .\\\#*

clean:: $(SUBDIRS:%=%/__clean__) $(EXTRASUBDIRS:%=%/__clean__)
	$(RM) $(CLEAN_FILES) $(RC_SRCS:.rc=.res) $(C_SRCS:.c=.o) $(CXX_SRCS:.cxx=.o)
	$(RM) $(DLLS:%=%.so) $(LIBS) $(EXES) $(EXES:%=%.so)

$(SUBDIRS:%=%/__clean__): dummy
	cd `dirname $@` && $(MAKE) clean

$(EXTRASUBDIRS:%=%/__clean__): dummy
	-cd `dirname $@` && $(RM) $(CLEAN_FILES)

### Target specific build rules
DEFLIB = $(LIBRARY_PATH) $(LIBRARIES) $(DLL_PATH) $(DLL_IMPORTS:%=-l%)

$(deps_dll_MODULE).so: $(deps_dll_OBJS) $(deps_dll_MODULE:.dll=.spec)
	$(CXX) $(deps_dll_LDFLAGS) -o $@ $(deps_dll_OBJS) $(deps_dll_LIBRARY_PATH) $(deps_dll_DLL_PATH) $(DEFLIB) $(deps_dll_DLLS:%=-l%) $(deps_dll_LIBRARIES:%=-l%)


