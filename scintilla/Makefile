### Generated by Winemaker 0.8.3
###
### Invocation command line was
### /usr/bin/winemaker --nomsvcrt .


SRCDIR                = .
SUBDIRS               = boostregex \
			gtk \
			macosx \
			src \
			test/unit \
			win32
DLLS                  =
LIBS                  =
EXES                  = scintilla.exe



### Common settings

CEXTRA                =
CXXEXTRA              =
RCEXTRA               =
DEFINES               =
INCLUDE_PATH          = -Iinclude
DLL_PATH              =
DLL_IMPORTS           =
LIBRARY_PATH          =
LIBRARIES             =


### scintilla.exe sources and settings

scintilla_exe_MODULE  = scintilla.exe
scintilla_exe_C_SRCS  =
scintilla_exe_CXX_SRCS= lexers/LexA68k.cxx \
			lexers/LexAPDL.cxx \
			lexers/LexASY.cxx \
			lexers/LexAU3.cxx \
			lexers/LexAVE.cxx \
			lexers/LexAVS.cxx \
			lexers/LexAbaqus.cxx \
			lexers/LexAda.cxx \
			lexers/LexAsm.cxx \
			lexers/LexAsn1.cxx \
			lexers/LexBaan.cxx \
			lexers/LexBash.cxx \
			lexers/LexBasic.cxx \
			lexers/LexBullant.cxx \
			lexers/LexCLW.cxx \
			lexers/LexCOBOL.cxx \
			lexers/LexCPP.cxx \
			lexers/LexCSS.cxx \
			lexers/LexCaml.cxx \
			lexers/LexCmake.cxx \
			lexers/LexCoffeeScript.cxx \
			lexers/LexConf.cxx \
			lexers/LexCrontab.cxx \
			lexers/LexCsound.cxx \
			lexers/LexD.cxx \
			lexers/LexECL.cxx \
			lexers/LexEScript.cxx \
			lexers/LexEiffel.cxx \
			lexers/LexErlang.cxx \
			lexers/LexFlagship.cxx \
			lexers/LexForth.cxx \
			lexers/LexFortran.cxx \
			lexers/LexGAP.cxx \
			lexers/LexGui4Cli.cxx \
			lexers/LexHTML.cxx \
			lexers/LexHaskell.cxx \
			lexers/LexInno.cxx \
			lexers/LexKix.cxx \
			lexers/LexLaTeX.cxx \
			lexers/LexLisp.cxx \
			lexers/LexLout.cxx \
			lexers/LexLua.cxx \
			lexers/LexMMIXAL.cxx \
			lexers/LexMPT.cxx \
			lexers/LexMSSQL.cxx \
			lexers/LexMagik.cxx \
			lexers/LexMarkdown.cxx \
			lexers/LexMatlab.cxx \
			lexers/LexMetapost.cxx \
			lexers/LexModula.cxx \
			lexers/LexMySQL.cxx \
			lexers/LexNimrod.cxx \
			lexers/LexNsis.cxx \
			lexers/LexOScript.cxx \
			lexers/LexOpal.cxx \
			lexers/LexOthers.cxx \
			lexers/LexPB.cxx \
			lexers/LexPLM.cxx \
			lexers/LexPO.cxx \
			lexers/LexPOV.cxx \
			lexers/LexPS.cxx \
			lexers/LexPascal.cxx \
			lexers/LexPerl.cxx \
			lexers/LexPowerPro.cxx \
			lexers/LexPowerShell.cxx \
			lexers/LexProgress.cxx \
			lexers/LexPython.cxx \
			lexers/LexR.cxx \
			lexers/LexRebol.cxx \
			lexers/LexRuby.cxx \
			lexers/LexSML.cxx \
			lexers/LexSQL.cxx \
			lexers/LexScriptol.cxx \
			lexers/LexSmalltalk.cxx \
			lexers/LexSorcus.cxx \
			lexers/LexSpecman.cxx \
			lexers/LexSpice.cxx \
			lexers/LexTACL.cxx \
			lexers/LexTADS3.cxx \
			lexers/LexTAL.cxx \
			lexers/LexTCL.cxx \
			lexers/LexTCMD.cxx \
			lexers/LexTeX.cxx \
			lexers/LexTxt2tags.cxx \
			lexers/LexVB.cxx \
			lexers/LexVHDL.cxx \
			lexers/LexVerilog.cxx \
			lexers/LexVisualProlog.cxx \
			lexers/LexYAML.cxx \
			lexlib/Accessor.cxx \
			lexlib/CharacterSet.cxx \
			lexlib/LexerBase.cxx \
			lexlib/LexerModule.cxx \
			lexlib/LexerNoExceptions.cxx \
			lexlib/LexerSimple.cxx \
			lexlib/PropSetSimple.cxx \
			lexlib/StyleContext.cxx \
			lexlib/WordList.cxx
scintilla_exe_RC_SRCS =
scintilla_exe_LDFLAGS = -mwindows
scintilla_exe_ARFLAGS =
scintilla_exe_DLL_PATH=
scintilla_exe_DLLS    = odbc32 \
			ole32 \
			oleaut32 \
			winspool \
			odbccp32
scintilla_exe_LIBRARY_PATH=
scintilla_exe_LIBRARIES= uuid

scintilla_exe_OBJS    = $(scintilla_exe_C_SRCS:.c=.o) \
			$(scintilla_exe_CXX_SRCS:.cpp=.o) \
			$(scintilla_exe_RC_SRCS:.rc=.res)



### Global source lists

C_SRCS                = $(scintilla_exe_C_SRCS)
CXX_SRCS              = $(scintilla_exe_CXX_SRCS)
RC_SRCS               = $(scintilla_exe_RC_SRCS)


### Tools

CC = winegcc
CXX = wineg++
RC = wrc
AR = ar


### Generic targets

all: $(SUBDIRS) $(DLLS:%=%.so) $(LIBS) $(EXES)

### Build rules

.PHONY: all clean dummy

$(SUBDIRS): dummy
	@cd $@ && $(MAKE)

# Implicit rules

.SUFFIXES: .cpp .cxx .rc .res
DEFINCL = $(INCLUDE_PATH) $(DEFINES) $(OPTIONS)

.c.o:
	$(CC) -c $(CFLAGS) $(CEXTRA) $(DEFINCL) -o $@ $<

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(CXXEXTRA) $(DEFINCL) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(CXXEXTRA) $(DEFINCL) -o $@ $<

.rc.res:
	$(RC) $(RCFLAGS) $(RCEXTRA) $(DEFINCL) -fo$@ $<

# Rules for cleaning

CLEAN_FILES     = y.tab.c y.tab.h lex.yy.c core *.orig *.rej \
                  \\\#*\\\# *~ *% .\\\#*

clean:: $(SUBDIRS:%=%/__clean__) $(EXTRASUBDIRS:%=%/__clean__)
	$(RM) $(CLEAN_FILES) $(RC_SRCS:.rc=.res) $(C_SRCS:.c=.o) $(CXX_SRCS:.cpp=.o)
	$(RM) $(DLLS:%=%.so) $(LIBS) $(EXES) $(EXES:%=%.so)

$(SUBDIRS:%=%/__clean__): dummy
	cd `dirname $@` && $(MAKE) clean

$(EXTRASUBDIRS:%=%/__clean__): dummy
	-cd `dirname $@` && $(RM) $(CLEAN_FILES)

### Target specific build rules
DEFLIB = $(LIBRARY_PATH) $(LIBRARIES) $(DLL_PATH) $(DLL_IMPORTS:%=-l%)

$(scintilla_exe_MODULE): $(scintilla_exe_OBJS)
	$(CXX) $(scintilla_exe_LDFLAGS) -o $@ $(scintilla_exe_OBJS) $(scintilla_exe_LIBRARY_PATH) $(scintilla_exe_DLL_PATH) $(DEFLIB) $(scintilla_exe_DLLS:%=-l%) $(scintilla_exe_LIBRARIES:%=-l%)


